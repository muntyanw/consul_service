"""specialized_hooks.py
~~~~~~~~~~~~~~~~~~~~~~

*–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó* –∑ —Ç–µ—Ö–∑–∞–≤–¥–∞–Ω–Ω—è.  –í–æ–Ω–∏ –Ω–µ –ø–æ–≤–∏–Ω–Ω—ñ –∑—É–ø–∏–Ω—è—Ç–∏ –≥–æ–ª–æ–≤–Ω–∏–π
–ø–æ—Ç—ñ–∫ –Ω–∞–¥–æ–≤–≥–æ, –∞–ª–µ –±–æ—Ç—É —Å–ª—ñ–¥ ¬´–¥–æ—á–µ–∫–∞—Ç–∏—Å—è¬ª —ó—Ö–Ω—å–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫
–ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚Äî¬†—Ç—É—Ç —Ü–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∑–≤–∏—á–∞–π–Ω–∏–º –±–ª–æ–∫—É—é—á–∏–º –≤–∏–∫–ª–∏–∫–æ–º (–Ω–µ–º–∞—î async).

–§—É–Ω–∫—Ü—ñ—ó –ª–∏—à–µ –≤–∏–≤–æ–¥—è—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—å, –¥–æ–¥–∞—é—Ç—å –∑–∞–ø–∏—Å —É HTML‚Äë–ª–æ–≥ —Ç–∞ —É
—Ç–µ–∫—Å—Ç–æ–≤–∏–π –ª–æ–≥ (rotating).  –°–∫—Ä–∏–Ω—à–æ—Ç, —è–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–æ, –∫–æ–ø—ñ—é—î—Ç—å—Å—è —É –ø—ñ–¥‚Äë–∫–∞—Ç–∞–ª–æ–≥
`img/` –ø–æ—Ä—è–¥ –∑ HTML‚Äë—Ñ–∞–π–ª–æ–º (–¥–∏–≤. ``io.html_logger``).

API, —è–∫–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å —ñ–Ω—à—ñ –º–æ–¥—É–ª—ñ
-----------------------------------
* ``next_user_hook(alias)``
* ``slot_found_hook(country, consulate, service, date, time, screenshot)``
* ``slot_obtained_hook(alias, date, time, screenshot)``
* ``error_hook(text, screenshot)``

–Ø–∫—â–æ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –±—ñ–ª—å—à —Å–∫–ª–∞–¥–Ω–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, Telegram
–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è), ‚Äî –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∑–º—ñ–Ω–∏—Ç–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é —Ü–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π, –Ω–µ —Ç–æ—Ä–∫–∞—é—á–∏—Å—å
``SlotFinder`` —á–∏ ``manager``.
"""
from __future__ import annotations

import datetime as _dt
from pathlib import Path
from typing import Optional

from bot_io.html_logger import html_log
from utils.logger import setup_logger

LOGGER = setup_logger(__name__)

# ---------------------------------------------------------------------------
# Helper: formatted timestamp
# ---------------------------------------------------------------------------

def _ts() -> str:
    return _dt.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")

# ---------------------------------------------------------------------------
# Hooks implementation
# ---------------------------------------------------------------------------

def next_user_hook(alias: str) -> None:
    msg = f"‚ñ∂ –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: <b>{alias}</b>"
    LOGGER.info(msg)
    html_log.add(msg, level="info")


def slot_found_hook(
    country: str,
    consulate: str,
    service: str,
    date: _dt.date,
    time_: str,
    screenshot: Optional[Path] = None,
) -> None:
    msg = (
        f"‚Äéüïì –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ª–æ—Ç ‚Äì {country} / {consulate} / {service} ‚Äì "
        f"<b>{date} {time_}</b>"
    )
    LOGGER.info(msg)
    html_log.add(msg, level="info", screenshot=screenshot)


def slot_obtained_hook(
    alias: str,
    date: _dt.date,
    time_: str,
    screenshot: Optional[Path] = None,
) -> None:
    msg = f"‚úÖ –°–ª–æ—Ç –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ –¥–ª—è <b>{alias}</b> ‚Äì {date} {time_}"
    LOGGER.info(msg)
    html_log.add(msg, level="success", screenshot=screenshot)


def error_hook(text: str, screenshot: Optional[Path] = None) -> None:
    msg = f"‚ùå –ü–û–ú–ò–õ–ö–ê ‚Äì {text}"
    LOGGER.error(msg)
    html_log.add(msg, level="error", screenshot=screenshot)
